apply plugin: 'com.android.application'
//沪江 aspectjx 需要使用 二者居然可以共存
//apply plugin: 'android-aspectjx'
//原生aspectj必须配置
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

android {

    signingConfigs {

        releasekey {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('D:\\Develop\\keystore\\debug.keystore')
            storePassword 'android'
        }
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('D:\\Develop\\keystore\\debug.keystore')
            storePassword 'android'
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "pri.weiqiang.tryit"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            moduleName "JNIHello"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        sourceSets {
            main {
                jni.srcDirs = []
            }
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

}
//原生aspectj必须配置，使用沪江aspectj不需要
final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.annotation:annotation:1.1.0'
    //camerax必须使用某一版本之上的库才可以，rc01 alpha05 不会报错
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.dagger:dagger:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    //引入沪江AOP aspectjrt
    implementation 'org.aspectj:aspectjrt:1.8.13'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation project(path: ':sidebarlib')//使用本地库，而非开源到jitPack上的库
    implementation project(path: ':charavatarlib')
    implementation 'com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:1.0.0'
    //alpha03 会报错 alpha01 02可以运行
    implementation "androidx.camera:camera-core:1.0.0-alpha02"
    implementation "androidx.camera:camera-camera2:1.0.0-alpha02"
    //使用jitPack上编译好的库
    //    implementation 'com.github.54wall:TryIt:版本号或者子部件及其版本号'
    //    implementation 'com.github.54wall:TryIt:v0.1'
}
